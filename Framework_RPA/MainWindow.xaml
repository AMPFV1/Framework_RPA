<RibbonWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Framework_RPA"
        xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon;assembly=System.Windows.Controls.Ribbon"
        xmlns:Wpf="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf" x:Class="Framework_RPA.MainWindow"
        mc:Ignorable="d"
        Title="Framework_RPA" Height="800" Width="1900" WindowStartupLocation="CenterOwner" WindowState="Maximized">
    <RibbonWindow.Resources>
        <local:TreeViewLineConverter x:Key="LineConverter"/>

        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeViewItem -->
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                            <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding Converter={StaticResource LineConverter}, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ScrollBarColorKey}}"/>
                                    </Setter.Value>
                                </Setter>
                                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ControlColorKey}}"/>
                                    </Setter.Value>
                                </Setter>
                                <!--<Setter Property="Foreground" Value="White"/>-->
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </RibbonWindow.Resources>
    <DockPanel LastChildFill="True">
        <Ribbon DockPanel.Dock="Top">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu Visibility="Hidden" Width="0"/>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="Start" KeyTip="S">
                <RibbonGroup Header="Testdurchlauf" KeyTip="T">
                    <RibbonButton x:Name="btnTestStarten" Label="Starten" Width="75" LargeImageSource="/Images/testen.ico" Click="btnTestStarten_Click"/>
                </RibbonGroup>
                <RibbonGroup Header="Neu" KeyTip="N">
                    <RibbonButton x:Name="rbTestfallNeu" Label="Testfall erstellen" Width="75" LargeImageSource="/Images/details.ico" Click="rbTestfallNeu_Click"/>
                </RibbonGroup>
                <RibbonGroup Header="Testfall" KeyTip="E" >
                    <!--<RibbonButton Label="open Editor" ContextMenu="{x:Null}" Click="RibbonButton_Click" ></RibbonButton>-->
                    <RibbonButton x:Name="rbTestfallBearbeiten" Label="Testfall bearbeiten" Width="80" LargeImageSource="/Images/details.ico" Click="rbTestfallBearbeiten_Click"/>
                    <RibbonButton x:Name="rtbDaten" Label="Daten bearbeiten" Width="80" LargeImageSource="/Images/daten.ico" Click="rbDaten_Click" />
                    <RibbonButton x:Name="rtbBeschreibung" Label="Beschreibung bearbeiten" Width="80" LargeImageSource="/Images/daten.ico" Click="rbBeschreibung_Click" />
                </RibbonGroup>
                <RibbonGroup Header="Ablage" KeyTip="A" >
                    <!--<RibbonButton Label="open Editor" ContextMenu="{x:Null}" Click="RibbonButton_Click" ></RibbonButton>-->
                    <RibbonButton x:Name="rbbtnTestfälle" Label="Testfälle öffnen" Width="80" LargeImageSource="/Images/folder_close.png" Click="rbbtnTestfälle_Click"/>
                    <RibbonButton x:Name="rbbtnErgebnisse" Label="Ergebnisse öffnen" Width="80" LargeImageSource="/Images/folder_close.png" Click="rbbtnErgebnisse_Click" />
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <DockPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <TreeView x:Name="trvÜbersicht" DockPanel.Dock="Left" Width="300px" FontSize="14" Padding="20,0,0,0" Margin="10,10,0,10" SelectedItemChanged="trvÜbersicht_SelectedItemChanged">
                <TreeView.Resources>
                    <Style x:Key="ExpandingImageStyle" TargetType="{x:Type Image}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                <Setter Property="Source" Value="{DynamicResource Icon_Open}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                                <Setter Property="Source" Value="{DynamicResource Icon_Closed}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                                <Setter Property="Source" Value="{Binding ImageSource}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Height="20">
                                <Image.Resources>
                                    <BitmapImage x:Key="Icon_Closed" UriSource="/Images/folder_close.png"/>
                                    <BitmapImage x:Key="Icon_Open" UriSource="/Images/folder_open.png"/>
                                </Image.Resources>
                                <Image.Style>
                                    <StaticResource ResourceKey="ExpandingImageStyle"/>
                                </Image.Style>
                            </Image>
                            <TextBlock Margin="5,0,0,0" Text="{Binding Bezeichnung}" FontWeight="{Binding FontWeight}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <Grid DockPanel.Dock="Right">
                <TabControl Margin="10" Name="tcHauptfenster">
                    <TabItem Header="Testfälle" Visibility="Visible">
                        <Grid>
                            <DockPanel>
                                <DockPanel Width="700" Margin="10,10,10,10">
                                    <Label Content="Testfall auswahl" DockPanel.Dock="Top" FontWeight="Normal" FontSize="14"/>
                                    <TreeView DockPanel.Dock="Top" x:Name="trgAllgemein" FontSize="14" Padding="20,0,0,0" SelectedItemChanged="trgAllgemein_SelectedItemChanged">
                                        <TreeView.Resources>
                                            <Style x:Key="ExpandingImageStyle" TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                                        <Setter Property="Source" Value="{DynamicResource Icon_Open}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                                                        <Setter Property="Source" Value="{DynamicResource Icon_Closed}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                                                        <Setter Property="Source" Value="{Binding ImageSource}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TreeView.Resources>
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate DataType="" ItemsSource="{Binding Items}">

                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox IsChecked="{Binding IsAuswahl, Mode=TwoWay}" Focusable="False" Margin="0,2,5,0" Visibility="{Binding Checkbox}" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                                                    <Image Width="20" Height="20">
                                                        <Image.Resources>
                                                            <BitmapImage x:Key="Icon_Closed" UriSource="/Images/folder_close.png"/>
                                                            <BitmapImage x:Key="Icon_Open" UriSource="/Images/folder_open.png"/>
                                                        </Image.Resources>
                                                        <Image.Style>
                                                            <StaticResource ResourceKey="ExpandingImageStyle"/>
                                                        </Image.Style>
                                                    </Image>
                                                    <TextBlock Margin="5,0,0,0" Text="{Binding Bezeichnung}" FontWeight="Normal" />
                                                </StackPanel>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </DockPanel>

                                <DockPanel Margin="0,10,10,10">
                                    <Label Content="Testfallbeschreibung" DockPanel.Dock="Top" FontSize="14" FontWeight="Normal"/>
                                    <RichTextBox DockPanel.Dock="Top" Name="rtbTestbeschreibung" IsReadOnly="True"/>
                                </DockPanel>
                            </DockPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Testdurchlauf" Visibility="Collapsed">
                        <Grid>
                            <DockPanel>
                                <DockPanel Width="700" Margin="10,10,10,10">
                                    <TreeView x:Name="trgTestdurchlauf" FontSize="14" Padding="20,0,0,0">
                                        <TreeView.Resources>
                                            <Style x:Key="ExpandingImageStyle" TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                                        <Setter Property="Source" Value="{DynamicResource Icon_Open}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                                                        <Setter Property="Source" Value="{DynamicResource Icon_Closed}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                                                        <Setter Property="Source" Value="{Binding ImageSource}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TreeView.Resources>
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate DataType="" ItemsSource="{Binding Items}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Width="20" Height="20">
                                                        <Image.Resources>
                                                            <BitmapImage x:Key="Icon_Closed" UriSource="/Images/folder_close.png"/>
                                                            <BitmapImage x:Key="Icon_Open" UriSource="/Images/folder_open.png"/>
                                                        </Image.Resources>
                                                        <Image.Style>
                                                            <StaticResource ResourceKey="ExpandingImageStyle"/>
                                                        </Image.Style>
                                                    </Image>
                                                    <TextBlock Margin="5,0,0,0" Width="200" Text="{Binding Bezeichnung}" FontWeight="{Binding FontWeight}" VerticalAlignment="Center" />
                                                </StackPanel>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </DockPanel>
                                <DockPanel Margin="0,10,10,10">
                                    <Grid>
                                        <StackPanel Orientation="Vertical">
                                            <Label Content="Historisches Testergebnis einbeziehen"/>
                                            <ComboBox Name="cbHistory" Height="25" Width="200" HorizontalAlignment="Left" Margin="5,0,0,0" Background="White" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel Margin="0,50,0,0" >
                                                <Label Content="Anmerkungen zum Testdurchlauf"/>
                                                <RichTextBox Name="rtbAnmerkungen" Width="400" Height="500"/>
                                            </StackPanel>
                                            <StackPanel Margin="10,50,0,0">
                                                <Label Content="Systeminformationen"/>
                                                <RichTextBox Name="tbSystemInfo" IsReadOnly="True" Width="400" Height="500" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </DockPanel>
                            </DockPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Ergebnis" Visibility="Collapsed">
                        <Grid Background="#FFE5E5E5">

                            <Wpf:WebView2 x:Name="wvBrowserErgebnisse" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CoreWebView2InitializationCompleted="wvBrowserErgebnisse_CoreWebView2InitializationCompleted" Source="https://defaultPage.html"/>

                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
        </DockPanel>
    </DockPanel>
</RibbonWindow>
